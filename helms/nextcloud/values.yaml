image:
  nextcloud:
    registry: docker.io
    repository: linuxserver/nextcloud
    tag: 25.0.2
    pullPolicy: IfNotPresent
  initContainers:
    - name: volume-permissions
      image: busybox
      imagePullPolicy: Always
      commands:
        - ['sh', '-c', 'chown -R 1001:1001 /data']
        - ['sh', '-c', 'chown -R 1001:1001 /config']
      securityContext:
          runAsUser: 0

persistence:
  enabled: true
  data:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    storageClass: "local-path"
  additionalLabels: {}
  additionalAnnotations: {}

#volumes:
#  - name: nextcloud-data-vl
#    mountPath: /data
#  - name: nextcloud-config-vl
#    mountPath: /config

service:
  type: ClusterIP
  port:
    port: 80
    targetPort: 80
    protocol: TCP
    name: http
    nodePort: 30080
  additionalLabels: {}
  additionalAnnotations: {}

deployment:
  enabled: true
  replicaCount: 1
  extraArgs: []
  extraEnv: []
  readinessProbe: {}
  livenessProbe: {}
  resources: {}
  securityContext:
    runAsUser: "0"
    runAsGroup: "0"
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  extraContainers: []
  initContainers: []
  imagePullSecrets: []
  priorityClassName: ""
  strategy:
    type: Recreate
  component : nextcloud
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalLabels: {}
  additionalAnnotations: {}

rbac:
  enabled: false
  serviceAccount:
    create: false
    name: nextcloud-serviceaccount
    annotations: {}

config:
  nextcloud:
    host: nextcloud.scriptonbasestar.net
    defaultUsername: admin
    defaultPassword: admin
    mail:
      enabled: false
      fromAddress: nextcloud
      domain: domain.com
      smtp:
        host: domain.com
        secure: ssl
        port: 465
        authtype: LOGIN
        name: user
    configs: []
    defaultConfigs: []

