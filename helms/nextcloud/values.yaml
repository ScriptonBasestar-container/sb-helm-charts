controller:
  component: nextcloud

persistence:
  data:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    storageClass: "local-path"
  additionalLabels: {}
  additionalAnnotations: {}

service:
  type: ClusterIP
  port:
    port: 80
    targetPort: 80
    protocol: TCP
    name: http
    nodePort: 30080
  additionalLabels: {}
  additionalAnnotations: {}

image:
  nextcloud:
    registry: docker.io
    image: nextcloud/nextcloud
    tag: 26-apache
    pullPolicy: IfNotPresent

deployment:
  enabled: true
  replicaCount: 1
  extraArgs: []
  extraEnvs: []
  readinessProbe: {}
  livenessProbe: {}
  resources: {}
  securityContext:
    runAsUser: "0"
    runAsGroup: "0"
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  extraContainers: []
  initContainers: []
  imagePullSecrets: []
  priorityClassName: ""
  strategy:
    type: Recreate
  component : nextcloud
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalLabels: {}
  additionalAnnotations: {}
  containers:
    nextcloud:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: true
      extraArgs: []
      extraEnvs: []
config:
  adminUsername: admin
  adminPassword: admin
  postgresql:
    type: postgres
    host: nextcloud-postgresql
    db: nextcloud
    user: nextcloud
    password: nextcloud
  redis:
    host: nextcloud-redis
    port: 6379
    password: nextcloud
  mail:
    fromAddress: nextcloud
    domain: domain.com
    smtp:
      host: domain.com
      secure: ssl
      port: 465
      name: user
      auth: user
      password: user
  configs: []
  defaultConfigs: []
  etc:
    trustedProxies: []
    overwriteProtocol: https
    overwriteHost: nextcloud.scriptonbasestar.net
